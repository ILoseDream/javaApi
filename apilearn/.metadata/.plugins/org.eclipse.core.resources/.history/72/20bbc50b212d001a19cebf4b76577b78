package com.yzr.poilearn;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class Case {
	
	public static void main(String[] args) throws IOException {
		// xlsxExport();
		// xlsExport();
		xlsxImport();
	}
	
	public static void xlsxExport() throws IOException {
		// 创建一个excel对象
		XSSFWorkbook workbook = new XSSFWorkbook();
		
		// 创建一个 工作表对象, 工作表命名为"员工信息"
		XSSFSheet sheet = workbook.createSheet("员工信息");
 		sheet.setColumnWidth(3, 20 * 256); // 工作表的第三列设置为20个字的宽度
 		sheet.setColumnWidth(4, 20 * 256); // 工作表的第四列设置为20个字的宽度
 		
 		// 创建一行  下标从0开始
 		XSSFRow row = sheet.createRow(0);
 		// 创建这行中的列， 下标从0开始（表头）
 		XSSFCell cell = row.createCell(0);
		
 		// 给cell（0）下表赋值
 		cell.setCellValue("姓名");
 		//创建这行中的列,并给该列直接赋值
 		row.createCell(1).setCellValue("年龄");
 		row.createCell(2).setCellValue("性别");
 		row.createCell(3).setCellValue("生日");
 		row.createCell(4).setCellValue("手机号");
 		
 		// 设置表里内容
 		row = sheet.createRow(1);
 		row.createCell(0).setCellValue("T");
 		row.createCell(1).setCellValue("保密");
 		row.createCell(2).setCellValue("男");
 		row.createCell(3).setCellValue("1996-07-12");
 		row.createCell(4).setCellValue("18623970959");
 		
 		row = sheet.createRow(2);
 		row.createCell(0).setCellValue("T");
 		row.createCell(1).setCellValue("18");
 		row.createCell(2).setCellValue("女");
 		row.createCell(3).setCellValue("1995-04-25");
 		row.createCell(4).setCellValue("18854875347");
 		
 		// 设置文件路径
 		File file = new File("F:\\员工信息.xlsx");
 		FileOutputStream stream = new FileOutputStream(file);
 		workbook.write(stream);
 		stream.close();
	}
	
	public static void xlsExport() throws IOException {
		// 创建一个excel对象
		HSSFWorkbook workbook = new HSSFWorkbook();
		
		// 创建一个 工作表对象, 工作表命名为"员工信息"
		HSSFSheet sheet = workbook.createSheet("员工信息");
 		sheet.setColumnWidth(3, 20 * 256); // 工作表的第三列设置为20个字的宽度
 		sheet.setColumnWidth(4, 20 * 256); // 工作表的第四列设置为20个字的宽度
 		
 		// 创建一行  下标从0开始
 		HSSFRow row = sheet.createRow(0);
 		// 创建这行中的列， 下标从0开始（表头）
 		HSSFCell cell = row.createCell(0);
		
 		// 给cell（0）下表赋值
 		cell.setCellValue("姓名");
 		//创建这行中的列,并给该列直接赋值
 		row.createCell(1).setCellValue("年龄");
 		row.createCell(2).setCellValue("性别");
 		row.createCell(3).setCellValue("生日");
 		row.createCell(4).setCellValue("手机号");
 		
 		// 设置表里内容
 		row = sheet.createRow(1);
 		row.createCell(0).setCellValue("T");
 		row.createCell(1).setCellValue("保密");
 		row.createCell(2).setCellValue("男");
 		row.createCell(3).setCellValue("1996-07-12");
 		row.createCell(4).setCellValue("18623970959");
 		
 		row = sheet.createRow(2);
 		row.createCell(0).setCellValue("T");
 		row.createCell(1).setCellValue("18");
 		row.createCell(2).setCellValue("女");
 		row.createCell(3).setCellValue("1995-04-25");
 		row.createCell(4).setCellValue("18854875347");
 		
 		// 设置文件路径
 		File file = new File("F:\\员工信息.xls");
 		FileOutputStream stream = new FileOutputStream(file);
 		workbook.write(stream);
 		stream.close();
	}

	public static void xlsxImport() throws IOException {
		
		File file = new File("F:\\员工信息.xlsx");
		FileInputStream stream = new FileInputStream(file);
		
		Workbook workbook = new XSSFWorkbook(stream);
		Sheet sheet = workbook.getSheet("员工信息");
		
		System.out.println(sheet.getLastRowNum());
		
		for (int i = 1;i <= sheet.getLastRowNum(); ++i) {
			Row row = sheet.getRow(i);
			int num = row.getLastCellNum();
			for (int j = 0;j< num; ++j)
				System.out.println(row.getCell(j).getStringCellValue());
		}
		
		// 资源关闭
		workbook.close();stream.close();
		
	}
	
}






