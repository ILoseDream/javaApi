package com.yzr.poilearn;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Date;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.RichTextString;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.junit.Test;
import org.omg.CORBA.DATA_CONVERSION;

public class PoiAPi {
	
	// 1 创建工作薄
	@SuppressWarnings("resource")
	@Test
	public void testCreateWorkBook() throws IOException {
		HSSFWorkbook workbook = new HSSFWorkbook();
		FileOutputStream stream = new FileOutputStream("workbook.xls");
		workbook.write(stream);
		stream.close();
	}
	
	@SuppressWarnings({"unused", "resource" })
	@Test
	public void testCreateSheet() throws IOException {
		// 多态
		Workbook workbook = new HSSFWorkbook();
		Sheet sheet1 = workbook.createSheet("first sheet");
		Sheet sheet2 = workbook.createSheet("second sheet");
		Sheet sheet3 = workbook.createSheet("third sheet");
		FileOutputStream stream = new FileOutputStream("sheet.xls");
		workbook.write(stream);
		stream.close();
	}
	
	@SuppressWarnings({ "unused", "resource" })
	@Test
	public void testCreateCell() throws IOException {
		// 创建一份 excel 工资表薄
		Workbook workbook = new HSSFWorkbook();
		// 在工作薄中创建一张工作表, 工作表名为new sheet
		Sheet sheet = workbook.createSheet("new sheet");
		Sheet sheet2 = workbook.createSheet();
		// 在工作表中创建一行单元格		
		Row row = sheet.createRow(0);
		// 一行中创建一个单元格
		Cell cell = row.createCell(0);
		// 在单元格中填充一些值
		cell.setCellValue("Hello Poi!");
		
		// 链式调用，在创建单元格时填充内容
		row.createCell(1).setCellValue(true);
		row.createCell(2).setCellValue(1.2);
		row.createCell(3).setCellValue(new Date());
		
		OutputStream stream = new FileOutputStream("createCell.xls");
		workbook.write(stream);
		stream.close();
	}
	
}